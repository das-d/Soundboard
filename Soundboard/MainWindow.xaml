<Window x:Class="Soundboard.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Soundboard"
        mc:Ignorable="d"
        Title="SoundBoard" Height="450" Width="800"
        WindowStartupLocation="CenterScreen"
        Background="#454545"
        Closed="WndClosed">
    
    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <GroupBox Style="{DynamicResource GroupBoxStyled}" Grid.Row="0" Header="Sounds" Foreground="White">
            <Grid>
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                    <ItemsControl Grid.Row="1" ItemsSource="{Binding SoundButtons, UpdateSourceTrigger=PropertyChanged}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel IsItemsHost="True">
                                    <WrapPanel.Resources>
                                        <Style TargetType="{x:Type local:SoundButton}">
                                            <Setter Property="Margin" Value="2.5" />
                                        </Style>
                                    </WrapPanel.Resources>
                                </WrapPanel>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>
        </GroupBox>
        <GroupBox Grid.Row="1" Header="Util" Style="{DynamicResource GroupBoxStyled}" Foreground="White">
            <WrapPanel>
                <Button Content="Stop Sound" Click="StopSound" Style="{StaticResource ButtonStyled}" Margin="2.5" Height="30" Width="80"/>
                <Button Content="Add Button" Click="AddButton" Margin="2.5" Height="30" Width="80">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyled}">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DeleteMode, UpdateSourceTrigger=PropertyChanged}" Value="true">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Content="Delete Mode" Click="DeleteButtonMode" Margin="2.5" Height="30" Width="80">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyled}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DeleteMode, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="Background" Value="#FFBBBB"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}"
                                                        BorderThickness="2" 
                                                        BorderBrush="Red"
                                                        CornerRadius="5"
                                                        x:Name="bd">
                                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                              Margin="{TemplateBinding Padding}" 
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                              RecognizesAccessKey="True"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <ComboBox ItemsSource="{Binding PlaybackDevices, UpdateSourceTrigger=PropertyChanged}" 
                          SelectedItem="{Binding SelOutputDevice, UpdateSourceTrigger=PropertyChanged}" 
                          DisplayMemberPath="DeviceName" 
                          Width="200"
                          Height="30"
                          Margin="2.5" 
                          VerticalContentAlignment="Center"/>
            </WrapPanel>
        </GroupBox>
    </Grid>
</Window>
